import timeit

# Define vowels
vowels = {'a', 'e', 'i', 'o', 'u', 'y'}

def compute_average_vowels(lines):


    # Flag to indicate if counting should start
    start_counting = False
    total_vowels = 0
    total_words = 0

    # Iterate over each line in the array
    for line in lines:
        # Check if the line starts with the marker
        if line.startswith("CHAPTER 1. Loomings."):
            start_counting = True
            continue

        # Count consonants for each word
        if start_counting:
            words = line.split()
            for word in words:
                word_vowels = 0
                for char in word:
                    # Consider only alphabetic characters
                    if char.isalpha():
                        # Convert to lowercase for comparison
                        char_lower = char.lower()
                        # Check if the character is a consonant
                        if char_lower in vowels:
                            word_vowels += 1
                total_vowels += word_vowels
                total_words += 1

# Read the file and store each line in an array
with open('pg2701.txt', 'r', encoding='utf-8') as file:
    lines = file.readlines()

# these two lines were AI generated by CHATGPT
time_taken = timeit.timeit(lambda: compute_average_vowels(lines), number=100) / 100
print(f'Average time taken to compute average number of vowels: {time_taken:.6f} seconds')